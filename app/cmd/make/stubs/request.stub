package requests

import (
    "github.com/gin-gonic/gin"
    "github.com/thedevsaddam/govalidator"
)

type {{StructName}}Request struct {
	Phone      string `json:"phone,omitempty" valid:"phone"`
	VerifyCode string `json:"verify_code,omitempty" valid:"verify_code"`
	// 模型模板中放进去常用的方法，使用 FIXME() 这个不存在的函数，通知要记得修改这个地方
	FIXME()
}

// ValidateLoginByPhone 验证表单，返回长度等于零即通过
func Validate{{StructName}}(ctx *gin.Context) (data {{StructName}}Request, errs MapErrs) {

	ShouldBindJSON(&data, ctx)

	rules := govalidator.MapData{
		"phone":       []string{"required", "digits:11"},
		"verify_code": []string{"required", "digits:6"},
	}

	messages := govalidator.MapData{
		"phone": []string{
			"required:手机号为必填项，参数名称 phone",
			"digits:手机号长度必须为 11 位的数字",
		},
		"verify_code": []string{
			"required:验证码答案必填",
			"digits:验证码长度必须为 6 位的数字",
		},
	}

	errs = validate(&data, rules, messages)

	// 手机验证码
	ValidateVerifyCode(data.Phone, data.VerifyCode, errs)

	return
}